import { PathEnums } from "../enums/Enums";
import {
  getRouteAboutDepartmentMedicalFaculty,
  getRouteAboutDocuments,
  getRouteAboutMedicalFaculty,
  getRouteAcademicCouncilAgenda,
  getRouteAcademicCouncilHandouts,
  getRouteAcademicCouncilMembers,
  getRouteAcademicCouncilResolutions,
  getRouteAcademicCouncilStatue,
  getRouteAccounting,
  getRouteAdmissionProcedure,
  getRouteAdmissionProcedureInt,
  getRouteAdmissionProcedureMag,
  getRouteAdmissionsCommitteeNews,
  getRouteAdmissionsJtNews,
  getRouteAdverts,
  getRouteAdvertsDetail,
  getRouteAmountPaymentInternationalStudents,
  getRouteArchiveDepartment,
  getRouteAttendance,
  getRouteAttendanceClinic,
  getRouteAuth,
  getRouteBachelorRequiredDocuments,
  getRouteCareerCenterFaq,
  getRouteCatalogueSciences,
  getRouteChancelleryDepartment,
  getRouteChecklistList,
  getRouteClassSchedule,
  getRouteClassScheduleDetail,
  getRouteClassScheduleInter,
  getRouteClassScheduleInterDetail,
  getRouteClinicReceptionQuota,
  getRouteClinicRequiredDocuments,
  getRouteClinicalResidencyDepartment,
  getRouteCommunicationDevelopmentCenter,
  getRouteComplianceControl,
  getRouteContacts,
  getRouteCouncilMedicalFaculty,
  getRouteDepartmentsMedicalFaculty,
  getRouteDirectorSimulationCenter,
  getRouteEducationDepartment,
  getRouteEducationEqualityDepartment,
  getRouteEducationalBuildings,
  getRouteExampleContracts,
  getRouteFaq,
  getRouteForeignStudentsStudying,
  getRouteGiftedStudents,
  getRouteGraduates,
  getRouteHistoryDepartmentMedicalFaculty,
  getRouteHistoryMedicalFaculty,
  getRouteHistorySimulationCenter,
  getRouteHumanResourceDepartment,
  getRouteInformation,
  getRouteInformationResidenceForeignStudents,
  getRouteInformationResourceCenter,
  getRouteInformationTechnologiesCenter,
  getRouteInstituteCertificates,
  getRouteInstituteStatute,
  getRouteInstruction,
  getRouteInstructionClinic,
  getRouteInternalRegulations,
  getRouteInternationalPartners,
  getRouteInternationalPartnershipDepartmentMedicalFaculty,
  getRouteInternationalRelationsDepartment,
  getRouteJoint,
  getRouteJtrainingReceptionQuota,
  getRouteLaboratoryRoom,
  getRouteLearning,
  getRouteLearningMag,
  getRouteLegalServicesDepartment,
  getRouteLifeStudents,
  getRouteMagClassSchedule,
  getRouteMagClassScheduleDetail,
  getRouteMain,
  getRouteManagement,
  getRouteManagementDetail,
  getRouteMarketing,
  getRouteMasterReceptionQuota,
  getRouteMastersDepartment,
  getRouteMastersThesisTopics,
  getRouteMemo,
  getRouteMemoClinic,
  getRouteMemoJtTraining,
  getRouteMemoMag,
  getRouteMethodologicalDepartmentMedicalFaculty,
  getRouteMethodologicalMedicalFaculty,
  getRouteMinistryDocuments,
  getRouteMonitoringReception,
  getRouteNewDetail,
  getRouteNews,
  getRoutePackageAcceptedDocuments,
  getRoutePackageAcceptedDocumentsJt,
  getRoutePhotoGallery,
  getRoutePlaceAdmissionOffice,
  getRoutePlanningFinanceDepartment,
  getRoutePressSecretary,
  getRouteProtectionMasterDessert,
  getRoutePsychologist,
  getRouteQualificationMedicalFaculty,
  getRouteRectorsAppeal,
  getRouteRegionalOffices,
  getRouteRepublicanPartners,
  getRouteResearchWorkDepartmentMedicalFaculty,
  getRouteResearchWorkMedicalFaculty,
  getRouteSameScholarships,
  getRouteScheduleSecBachelor,
  getRouteScheduleSecMasters,
  getRouteScientificResearchDepartment,
  getRouteSimulationCenter,
  getRouteSitemap,
  getRouteSpiritualDepartment,
  getRouteSpiritualityEnlightenmentDepartment,
  getRouteStateExams,
  getRouteStatePrograms,
  getRouteStructureDepartmentMedicalFaculty,
  getRouteStructureMedicalFaculty,
  getRouteStructureUniversity,
  getRouteStudentScientificSocietyDepartmentMedicalFaculty,
  getRouteStudentScientificSocietyMedicalFaculty,
  getRouteSymbols,
  getRouteTalentedStudents,
  getRouteTargetReception,
  getRouteTreaty,
  getRouteUnionCommittee,
  getRouteWomenCommitteeDepartment,
  getRouteYouthUnionCenter,
} from "../getPaths/GetPaths";

export const PathNames: Record<PathEnums, string> = {
  [PathEnums.MAIN]: getRouteMain(),
  [PathEnums.AUTH]: getRouteAuth(""),
  [PathEnums.SYMBOLS]: getRouteSymbols("", ""),
  [PathEnums.SITEMAP]: getRouteSitemap(),
  [PathEnums.CONTACTS]: getRouteContacts(),
  [PathEnums.INFORMATION]: getRouteInformation(),
  [PathEnums.STRUCTURE_UNIVERSITY]: getRouteStructureUniversity(),
  [PathEnums.INSTITUTE_STATUTE]: getRouteInstituteStatute(),
  [PathEnums.INSTITUTE_CERTIFICATES]: getRouteInstituteCertificates(),
  [PathEnums.INTERNAL_REGULATIONS]: getRouteInternalRegulations(),
  [PathEnums.EDUCATIONAL_BUILDINGS]: getRouteEducationalBuildings(),
  [PathEnums.LABORATORY_ROOM]: getRouteLaboratoryRoom(),
  [PathEnums.LIFE_STUDENTS]: getRouteLifeStudents(),
  [PathEnums.ACADEMIC_COUNCIL_STATUE]: getRouteAcademicCouncilStatue(),
  [PathEnums.ACADEMIC_COUNCIL_MEMBERS]: getRouteAcademicCouncilMembers(),
  [PathEnums.ACADEMIC_COUNCIL_AGENDA]: getRouteAcademicCouncilAgenda(),
  [PathEnums.ACADEMIC_COUNCIL_HANDOUTS]: getRouteAcademicCouncilHandouts(),
  [PathEnums.ACADEMIC_COUNCIL_RESOLUTIONS]:
    getRouteAcademicCouncilResolutions(),
  [PathEnums.ABOUT_DOCUMENTS]: getRouteAboutDocuments(),
  [PathEnums.MINISTRY_ORDER]: getRouteMinistryDocuments(),
  [PathEnums.STATE_PROGRAMS]: getRouteStatePrograms(),
  [PathEnums.MANAGEMENT]: getRouteManagement(),
  [PathEnums.MANAGEMENT_DETAIL]: getRouteManagementDetail(""),
  [PathEnums.ABOUT_MEDICAL_FACULTY]: getRouteAboutMedicalFaculty(""),
  [PathEnums.QUALIFICATION_MEDICAL_FACULTY]:
    getRouteQualificationMedicalFaculty(""),
  [PathEnums.HISTORY_MEDICAL_FACULTY]: getRouteHistoryMedicalFaculty(""),
  [PathEnums.STRUCTURE_MEDICAL_FACULTY]: getRouteStructureMedicalFaculty(""),
  [PathEnums.COUNCIL_MEDICAL_FACULTY]: getRouteCouncilMedicalFaculty(""),
  [PathEnums.DEPARTMENTS_MEDICAL_FACULTY]:
    getRouteDepartmentsMedicalFaculty(""),
  [PathEnums.METHODOLOGICAL_MEDICAL_FACULTY]:
    getRouteMethodologicalMedicalFaculty(""),
  [PathEnums.STUDENT_SCIENTIFIC_SOCIETY_MEDICAL_FACULTY]:
    getRouteStudentScientificSocietyMedicalFaculty(""),
  [PathEnums.RESEARCH_WORK_MEDICAL_FACULTY]:
    getRouteResearchWorkMedicalFaculty(""),
  [PathEnums.ABOUT_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteAboutDepartmentMedicalFaculty(""),
  [PathEnums.HISTORY_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteHistoryDepartmentMedicalFaculty(""),
  [PathEnums.STRUCTURE_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteStructureDepartmentMedicalFaculty(""),
  [PathEnums.SPIRITUAL_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteSpiritualDepartment(""),
  [PathEnums.METHODOLOGICAL_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteMethodologicalDepartmentMedicalFaculty(""),
  [PathEnums.RESEARCH_WORK_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteResearchWorkDepartmentMedicalFaculty(""),
  [PathEnums.STUDENT_SCIENTIFIC_SOCIETY_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteStudentScientificSocietyDepartmentMedicalFaculty(""),
  [PathEnums.INTERNATIONAL_PARTNERSHIP_DEPARTMENT_MEDICAL_FACULTY]:
    getRouteInternationalPartnershipDepartmentMedicalFaculty(""),
  [PathEnums.EDUCATION_QUALITY_DEPARTMENT]:
    getRouteEducationEqualityDepartment(),
  [PathEnums.EDUCATION_DEPARTMENT]: getRouteEducationDepartment(),
  [PathEnums.MASTERS_DEPARTMENT]: getRouteMastersDepartment(),
  [PathEnums.CLINICAL_RESIDENCY_DEPARTMENT]:
    getRouteClinicalResidencyDepartment(),
  [PathEnums.INTERNATIONAL_RELATIONS_DEPARTMENT]:
    getRouteInternationalRelationsDepartment(),
  [PathEnums.SCIENTIFIC_RESEARCH_DEPARTMENT]:
    getRouteScientificResearchDepartment(),
  [PathEnums.GIFTED_STUDENTS]: getRouteGiftedStudents(),
  [PathEnums.TALENTED_STUDENTS]: getRouteTalentedStudents(),
  [PathEnums.ACCOUNTING]: getRouteAccounting(),
  [PathEnums.MARKETING]: getRouteMarketing(),
  [PathEnums.PLANNING_FINANCE_DEPARTMENT]: getRoutePlanningFinanceDepartment(),
  [PathEnums.INFORMATION_TECHNOLOGIES_CENTER]:
    getRouteInformationTechnologiesCenter(),
  [PathEnums.INFORMATION_RESOURCE_CENTER]: getRouteInformationResourceCenter(),
  [PathEnums.YOUTH_UNION_CENTER]: getRouteYouthUnionCenter(),
  [PathEnums.WOMEN_COMMITTEE_DEPARTMENT]: getRouteWomenCommitteeDepartment(),
  [PathEnums.COMMUNICATION_DEVELOPMENT_CENTER]:
    getRouteCommunicationDevelopmentCenter(),
  [PathEnums.SPIRITUALITY_ENLIGHTENMENT_DEPARTMENT]:
    getRouteSpiritualityEnlightenmentDepartment(),
  [PathEnums.PRESS_SECRETARY]: getRoutePressSecretary(),
  [PathEnums.HUMAN_RESOURCE_DEPARTMENT]: getRouteHumanResourceDepartment(),
  [PathEnums.CHANCELLERY_DEPARTMENT]: getRouteChancelleryDepartment(),
  [PathEnums.COMPLIANCE_CONTROL]: getRouteComplianceControl(),
  [PathEnums.ARCHIVE_DEPARTMENT]: getRouteArchiveDepartment(),
  [PathEnums.LEGAL_SERVICES_DEPARTMENT]: getRouteLegalServicesDepartment(),
  [PathEnums.PSYCHOLOGIST]: getRoutePsychologist(),
  [PathEnums.UNION_COMMITTEE]: getRouteUnionCommittee(),
  [PathEnums.SIMULATION_CENTER]: getRouteSimulationCenter(),
  [PathEnums.HISTORY_SIMULATION_CENTER]: getRouteHistorySimulationCenter(),
  [PathEnums.DIRECTOR_SIMULATION_CENTER]: getRouteDirectorSimulationCenter(),

  [PathEnums.REGIONAL_OFFICES]: getRouteRegionalOffices(),
  [PathEnums.EXAMPLE_CONTRACTS]: getRouteExampleContracts(),
  [PathEnums.GRADUATES]: getRouteGraduates(),
  [PathEnums.CAREER_CENTER_FAQ]: getRouteCareerCenterFaq(),
  [PathEnums.TREATY]: getRouteTreaty(),
  [PathEnums.JOINT]: getRouteJoint(),
  [PathEnums.REPUBLICAN_PARTNERS]: getRouteRepublicanPartners(),
  [PathEnums.INTERNATIONAL_PARTNERS]: getRouteInternationalPartners(),
  [PathEnums.PHOTO_GALLERY]: getRoutePhotoGallery(),
  [PathEnums.ADVERTS]: getRouteAdverts(),
  [PathEnums.NEWS]: getRouteNews(),
  [PathEnums.PACKAGE_ACCEPTED_DOCUMENTS_JT]:
    getRoutePackageAcceptedDocumentsJt(),
  [PathEnums.JTRAINING_RECEPTION_QUOTA]: getRouteJtrainingReceptionQuota(),
  [PathEnums.MEMO_JT_TRAINING]: getRouteMemoJtTraining(),
  [PathEnums.ADMISSIONS_JT_NEWS]: getRouteAdmissionsJtNews(),

  [PathEnums.CLINIC_REQUIRED_DOCUMENTS]: getRouteClinicRequiredDocuments(),
  [PathEnums.CLINIC_RECEPTION_QUOTA]: getRouteClinicReceptionQuota(),
  [PathEnums.MEMO_CLINIC]: getRouteMemoClinic(),
  [PathEnums.FAQ]: getRouteFaq(),
  [PathEnums.ADMISSION_PROCEDURE_INT]: getRouteAdmissionProcedureInt(),
  [PathEnums.RECTORS_APPEAL]: getRouteRectorsAppeal(),
  [PathEnums.PACKAGE_ACCEPTED_DOCUMENTS]: getRoutePackageAcceptedDocuments(),
  [PathEnums.MASTER_RECEPTION_QUOTA]: getRouteMasterReceptionQuota(),
  [PathEnums.ADMISSION_PROCEDURE_MAG]: getRouteAdmissionProcedureMag(),
  [PathEnums.MEMO]: getRouteMemo(),
  [PathEnums.MEMO_MAG]: getRouteMemoMag(),
  [PathEnums.CHECKLIST_LIST]: getRouteChecklistList(),
  [PathEnums.PLACE_ADMISSION_OFFICE]: getRoutePlaceAdmissionOffice(),
  [PathEnums.ADMISSIONS_COMMITTEE_NEWS]: getRouteAdmissionsCommitteeNews(),
  [PathEnums.INFORMATION_RESIDENCE_FOREIGN_STUDENTS]:
    getRouteInformationResidenceForeignStudents(),
  [PathEnums.AMOUNT_PAYMENT_INTERNATIONAL_STUDENTS]:
    getRouteAmountPaymentInternationalStudents(),
  [PathEnums.FOREIGN_STUDENTS_STUDYING]: getRouteForeignStudentsStudying(),
  [PathEnums.CLASS_SCHEDULE_INTER]: getRouteClassScheduleInter(),
  [PathEnums.CLASS_SCHEDULE_INTER_DETAIL]: getRouteClassScheduleInterDetail(
    "",
    ""
  ),
  [PathEnums.STATE_EXAMS]: getRouteStateExams(),
  [PathEnums.ATTENDANCE_CLINIC]: getRouteAttendanceClinic(),
  [PathEnums.INSTRUCTION_CLINIC]: getRouteInstructionClinic(),
  [PathEnums.SCHEDULE_SEC_MASTERS]: getRouteScheduleSecMasters(),
  [PathEnums.MASTERS_THESIS_TOPICS]: getRouteMastersThesisTopics(),
  [PathEnums.PROTECTION_MASTER_DESSERT]: getRouteProtectionMasterDessert(),
  [PathEnums.LEARNING_MAG]: getRouteLearningMag(),
  [PathEnums.SAME_SCHOLARSHIPS]: getRouteSameScholarships(),
  [PathEnums.CATALOGUE_SCIENCES]: getRouteCatalogueSciences(),
  [PathEnums.ATTENDANCE]: getRouteAttendance(),
  [PathEnums.LEARNING]: getRouteLearning(),
  [PathEnums.CLASS_SCHEDULE]: getRouteClassSchedule(),
  [PathEnums.CLASS_SCHEDULE_DETAIL]: getRouteClassScheduleDetail("", ""),
  [PathEnums.MAG_CLASS_SCHEDULE]: getRouteMagClassSchedule(),
  [PathEnums.MAG_CLASS_SCHEDULE_DETAIL]: getRouteMagClassScheduleDetail("", ""),
  [PathEnums.INSTRUCTION]: getRouteInstruction(),
  [PathEnums.SCHEDULE_SEC_BACHELOR]: getRouteScheduleSecBachelor(),
  [PathEnums.TARGET_RECEPTION]: getRouteTargetReception(),
  [PathEnums.BACHELOR_REQUIRED_DOCUMENTS]: getRouteBachelorRequiredDocuments(),
  [PathEnums.MONITORING_RECEPTION]: getRouteMonitoringReception(),
  [PathEnums.ADMISSION_PROCEDURE]: getRouteAdmissionProcedure(),
  [PathEnums.NEWS_DETAIL]: getRouteNewDetail(""),
  [PathEnums.ADVERTS_DETAIL]: getRouteAdvertsDetail(""),
};
